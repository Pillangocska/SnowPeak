services:
  frontend:
    build:
      context: ./client
      args:
        - ANGULAR_PORT=${ANGULAR_PORT}
    container_name: frontend
    restart: unless-stopped
    ports:
      - ${ANGULAR_PORT}:${ANGULAR_PORT}
    environment:
      - BACKEND_URL=http://backend:${SPRING_BOOT_PORT}
      - RABBITMQ_WS_URL=ws://rabbitmq:15674/ws
    volumes:
      - ./client/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - frontend-network
      - backend-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  backend:
    image: backend-v1
    container_name: backend
    build:
      context: ./backend
      args:
        - SPRING_BOOT_PORT=${SPRING_BOOT_PORT}
    restart: unless-stopped
    ports:
      - ${SPRING_BOOT_PORT}:${SPRING_BOOT_PORT}
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080/auth
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      keycloak:
        condition: service_started
    networks:
      - frontend-network
      - backend-network
      - keycloak-network

  ski-lift-1:
    image: krisztianszenasi/ski-lift:latest
    container_name: ski-lift-1
    stdin_open: true
    tty: true
    environment:
      LIFT_ID: ${LIFT_1_ID}
      RABBITMQ_HOST: rabbitmq
    networks:
      - backend-network
    depends_on:
      - rabbitmq

  ski-lift-2:
    image: krisztianszenasi/ski-lift:latest
    container_name: ski-lift-2
    stdin_open: true
    tty: true
    environment:
      LIFT_ID: ${LIFT_2_ID}
      RABBITMQ_HOST: rabbitmq
    networks:
      - backend-network
    depends_on:
      - rabbitmq

  ski-lift-3:
    image: krisztianszenasi/ski-lift:latest
    container_name: ski-lift-3
    stdin_open: true
    tty: true
    environment:
      LIFT_ID: ${LIFT_3_ID}
      RABBITMQ_HOST: rabbitmq
    networks:
      - backend-network
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./rabbitmq_enabled_plugins:/etc/rabbitmq/enabled_plugins
    ports:
      - "5672:5672"    # AMQP protocol port
      - "15672:15672"  # Management UI
      - "15674:15674"  # WebSocket port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    networks:
      - backend-network
    labels:
      kompose.service.type: ClusterIP
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 3s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  keycloak:
    container_name: snow-peak-keycloak
    image: quay.io/keycloak/keycloak:22.0.5
    ports:
      - 9090:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_FEATURES: preview
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    command:
      - "start-dev"
      - "--import-realm"
    depends_on:
      - keycloak-postgres
    networks:
      - keycloak-network

  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres:15
    ports:
      - "5464:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  db:
    image: postgres:14.1-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5454:5432'
    volumes:
      - app_postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

volumes:
  rabbitmq_data:
  rabbitmq_logs:
  postgres_data:
    driver: local
  app_postgres_data:
    driver: local

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
  keycloak-network:
    driver: bridge
